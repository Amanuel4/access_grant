"""
Django settings for access_grant project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import ldap
from django_auth_ldap.config import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tku3lwq@$k7(tjf=u*u09jf94m^450mu6s0!$&5^#%m3rr4_#4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'rest_framework',
    'rest_framework_simplejwt',
    'django_celery_beat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'access_grant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'access_grant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

'''
DATABASES = {
        'default': {
            'ENGINE': 'djongo',
            'NAME': 'django',
            'ENFORCE_SCHEMA': False,
            'CLIENT': {
                'host': '127.0.0.1',
                'port': 27017,
                'username': 'Admin',
                'password': 'aman_123',
                'authSource': 'django',
                'authMechanism': 'SCRAM-SHA-1'
            },
            'LOGGING': {
                'version': 1,
                'loggers': {
                    'djongo': {
                        'level': 'DEBUG',
                        'propagate': False,                        
                    }
                },
             },
        }
    }
    
'''

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (

        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mydb', 
        'USER': 'django',
        'PASSWORD': 'test@123',
        'HOST': '172.24.40.249', 
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Addis_Ababa'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


######################################
# CELERY CONFIGURATION               #
######################################

# Add Celery configuration

CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Addis_Ababa'



# Baseline configuration.

AUTH_LDAP_SERVER_URI = "ldap://172.24.14.10:3268"
 
AUTH_LDAP_BIND_DN = "CN=svc-netbox netbox,OU=Blueprint Users,OU=Blueprint,DC=blueprint,DC=lab"

AUTH_LDAP_BIND_PASSWORD = "Pass1234"

AUTH_LDAP_USER_SEARCH = LDAPSearch(

    "dc=blueprint,dc=lab", ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)"

)

# Or:

# AUTH_LDAP_USER_DN_TEMPLATE = 'uid=%(user)s,ou=users,dc=example,dc=com'
 
# Set up the basic group parameters.

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(

    "dc=blueprint,dc=lab",

    ldap.SCOPE_SUBTREE,

    "(objectClass=group)",

)

AUTH_LDAP_GROUP_TYPE = NestedGroupOfNamesType(name_attr="cn")
 
# Simple group restrictions

AUTH_LDAP_REQUIRE_GROUP = "CN=IT-Linux Admins,OU=Blueprint Security Groups,OU=Blueprint,DC=blueprint,DC=lab"

AUTH_LDAP_USER_ATTR_MAP = {

    "first_name": "givenName",

    "last_name": "sn",

    "email": "userPrincipalName",

}
 
AUTH_LDAP_USER_FLAGS_BY_GROUP = {

    "is_active": "CN=IT-Linux Admins,OU=Blueprint Security Groups,OU=Blueprint,DC=blueprint,DC=lab",

    "is_staff": "CN=IT-Linux Admins,OU=Blueprint Security Groups,OU=Blueprint,DC=blueprint,DC=lab",

    "is_superuser": "CN=IT-Linux Admins,OU=Blueprint Security Groups,OU=Blueprint,DC=blueprint,DC=lab",

}
 
# This is the default, but I like to be explicit.

AUTH_LDAP_ALWAYS_UPDATE_USER = True
 
# Use LDAP group membership to calculate group permissions.

AUTH_LDAP_FIND_GROUP_PERMS = True
 
# Cache distinguished names and group memberships for an hour to minimize

# LDAP traffic.

AUTH_LDAP_CACHE_TIMEOUT = 3600

AUTHENTICATION_BACKENDS = (

    "django_auth_ldap.backend.LDAPBackend",

    "django.contrib.auth.backends.ModelBackend",

)
